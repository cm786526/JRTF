// Copyright 2011 National Instruments
// License: NATIONAL INSTRUMENTS SOFTWARE LICENSE AGREEMENT
//   Refer to "MHDDK License Agreement.pdf" in the root of this distribution.

// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// This file is autogenerated!!!
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#ifndef ___tStreamCircuitRegMapValues_h___
#define ___tStreamCircuitRegMapValues_h___

namespace nStreamCircuitRegMap {
   namespace nDMAChannel {
      namespace nDMAChannelNumber {
         enum {
            kMask = 0x3ff000,
            kOffset = 0xc,
         };
      }

   }

   namespace nStreamControlStatusReg {
      namespace nCISTCR_Enable {
         enum {
            kMask = 0x1,
            kOffset = 0,
         };
      }

      namespace nCISTCR_Disable {
         enum {
            kMask = 0x2,
            kOffset = 0x1,
         };
      }

      namespace nCISTCR_Clear {
         enum {
            kMask = 0x4,
            kOffset = 0x2,
         };
      }

      namespace nCISATCR_AccessIgnored {
         enum {
            kMask = 0x8,
            kOffset = 0x3,
         };
      }

      namespace nDataTransferEnable {
         enum {
            kMask = 0x100,
            kOffset = 0x8,
         };
      }

      namespace nStreamCircuitReset {
         enum {
            kMask = 0x200,
            kOffset = 0x9,
         };
      }

      namespace nStreamCircuitResetComplete {
         enum {
            kMask = 0x400,
            kOffset = 0xa,
         };
      }

      namespace nStreamCircuitResetNotify {
         enum {
            kMask = 0x800,
            kOffset = 0xb,
         };
      }

      namespace nDoneFlagSet {
         enum {
            kMask = 0x2000,
            kOffset = 0xd,
         };
      }

      namespace nInvalidPacketFlag {
         enum {
            kMask = 0x4000,
            kOffset = 0xe,
         };
      }

      namespace nInvalidPacketClear {
         enum {
            kMask = 0x8000,
            kOffset = 0xf,
         };
      }

      namespace nFifoEmpty {
         enum {
            kMask = 0x40000,
            kOffset = 0x12,
         };
      }

   }

   namespace nStreamAdditiveTransferCountReg {
      namespace nStreamAdditiveTransferCount {
         enum {
            kMask = 0xffffffff,
            kOffset = 0,
         };
      }

   }

   namespace nStreamTransferCountReg {
      namespace nStreamTransferCount {
         enum {
            kMask = 0xffffffff,
            kOffset = 0,
         };
      }

   }

   namespace nStreamFifoSizeReg {
      namespace nStreamFifoSize {
         enum {
            kMask = 0xffffffff,
            kOffset = 0,
         };
      }

   }

   namespace nStreamTransferLimitReg {
      namespace nStreamMinPayloadSize {
         enum {
            kMask = 0xffff,
            kOffset = 0,
         };
      }

      namespace nStreamMaxPayloadSize {
         enum {
            kMask = 0xffff0000,
            kOffset = 0x10,
         };
      }

   }

   namespace nStreamEvictionReg {
      namespace nEvictionTime {
         enum {
            kMask = 0x3ff,
            kOffset = 0,
         };
      }

      namespace nDisableEviction {
         enum {
            kMask = 0x80000000,
            kOffset = 0x1f,
         };
      }

   }

   namespace nStreamTransactionLimitReg {
      namespace nTransactionLimit {
         enum {
            kMask = 0xff,
            kOffset = 0,
         };
      }

      namespace nMaxTransactionLimit {
         enum {
            kMask = 0xff00,
            kOffset = 0x8,
         };
      }

   }

   using namespace nDMAChannel;
   using namespace nStreamControlStatusReg;
   using namespace nStreamAdditiveTransferCountReg;
   using namespace nStreamTransferCountReg;
   using namespace nStreamFifoSizeReg;
   using namespace nStreamTransferLimitReg;
   using namespace nStreamEvictionReg;
   using namespace nStreamTransactionLimitReg;
}

#endif


// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// This file is autogenerated!!!
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!

