// Copyright 2011 National Instruments
// License: NATIONAL INSTRUMENTS SOFTWARE LICENSE AGREEMENT
//   Refer to "MHDDK License Agreement.pdf" in the root of this distribution.

// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// This file is autogenerated!!!
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!

#ifndef ___tXSeries_h___
#define ___tXSeries_h___

// includes
#include "osiTypes.h"
#include "osiBus.h"
#include "tCHInCh.h"
#include "tSimultaneousControl.h"
#include "tAI.h"
#include "tAO.h"
#include "tBrdServices.h"
#include "tBusInterface.h"
#include "tCounter.h"
#include "tDI.h"
#include "tDO.h"
#include "tStreamCircuitRegMap.h"
#include "tTriggers.h"


#ifndef ___tXSeriesValues_h___
#include "tXSeriesValues.h"
#endif

class tXSeries
{
public:
   tCHInCh CHInCh;
   tSimultaneousControl SimultaneousControl;
   tAI AI;
   tAO AO;
   tBrdServices BrdServices;
   tBusInterface BusInterface;
   tCounter Counter0;
   tCounter Counter1;
   tCounter Counter2;
   tCounter Counter3;
   tDI DI;
   tDO DO;
   tStreamCircuitRegMap AIStreamCircuit;
   tStreamCircuitRegMap Counter0StreamCircuit;
   tStreamCircuitRegMap Counter1StreamCircuit;
   tStreamCircuitRegMap Counter2StreamCircuit;
   tStreamCircuitRegMap Counter3StreamCircuit;
   tStreamCircuitRegMap DIStreamCircuit;
   tStreamCircuitRegMap AOStreamCircuit;
   tStreamCircuitRegMap DOStreamCircuit;
   tTriggers Triggers;

   //---------------------------------------------------------------------------
   // IO Strategies
   //---------------------------------------------------------------------------
   //---------------------------------------------------------------------------
   // Register Groups
   //---------------------------------------------------------------------------

   //----------------------------------------
   // Register/Field Ids
   //----------------------------------------
   typedef enum {

      kMaxRegisterId = -1

   } tId;

   tXSeries(tBusSpaceReference addrSpace, nMDBG::tStatus2* statusChain = NULL);
   void reset(nMDBG::tStatus2* statusChain = NULL);
   virtual ~tXSeries();

   inline tBusSpaceReference getBusSpaceReference(void) const;

   inline void setAddressOffset(u32 value, nMDBG::tStatus2* statusChain = NULL);
   inline u32  getAddressOffset(nMDBG::tStatus2* statusChain = NULL);
private:
   void _initialize(nMDBG::tStatus2* statusChain = NULL);
   tBusSpaceReference _addrSpace;
   u32 _addressOffset;

};

#ifndef ___tXSeries_ipp___
#ifndef ___tXSeries_h_no_inline___
#include "tXSeries.ipp"
#endif

#endif

#endif


// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!
// This file is autogenerated!!!
// !!!!!!!!!!!!!!!!!!!!!!!!!!!!!

